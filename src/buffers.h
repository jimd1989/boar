#pragma once

#include <stdint.h>
#include <stdlib.h>

#include "audio-settings.h"
#include "constants/defaults.h"

typedef struct Buffer {

/* Two buffers: Mix is always DEFAULT_BUFSIZE frames long, and holds floating 
 * point sample data. This is for mixing synthesis data generated by each of the 
 * voices. It is kept short to respond effectively to user input. Output is
 * also ideally DEFAULT_BUFSIZE frames in length, but may not be due to hardware
 * limitations. Output holds raw bytes to write to sndio. If Output is longer
 * than Mix, then Mix will be filled multiple times before Output writes its
 * data. The lengths of these buffers do not have to be perfect multiples of one
 * another. The internal synthesis data is fundamentally monophonic, but if 
 * multichannel output is specified, then one sample of Mix will be written
 * multiple times to Output, potentially at different final amplitudes. With
 * this in mind, the Output buffer needs to track various sizing variables, 
 * while Mix is only manipulated in terms of frames. */

  size_t          BytesWritten;
  size_t          FramesWritten;
  size_t          SizeFrames;
  size_t          SizeBytes;
  float           Mix[DEFAULT_BUFSIZE];
  uint8_t       * Output;
} Buffer;

Buffer makeBuffer(const size_t);
void killBuffer(Buffer *);
