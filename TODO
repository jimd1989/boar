Features that boar is lacking, none of which are guaranteed to ever actually
be implemented. If you are interested in contributing to boar's codebase, these
may be good ideas to work on.

Char type
Currently the extra (E) command takes the first character from a string
argument, ignoring whatever is behind it. Should the program explicitly
parse for a single char parameter, and return an error when anything longer
is provided?

Audio dithering:
Simple audio dithering has been implemented, but I don't have the ears
(or equipment?) needed to notice its effects.

Velocity sensitivity:
Implemented, but not tested on an actual keyboard yet. I don't have one! A
simple script that plays the same note with velocities between 0 and 127 seems
to work as intended though.

Free-running modulators:
An additional modulator that runs against the signal at a fixed frequency and
scaled depth may be desirable. This would allow the performer to add LFO
effects like vibrato to a C:M pair that is modulating at a much higher
frequency.

Info:
Running the info command (i), followed by a string, should return information
about the queried parameter to stderr. Like `i W'` would return the shape of
the modulator wave, etc.

Help:
A help (h) command followed by a command char could explain the purpose of
each command. 

Modify ByteBuffer
Mixed-down int16_t samples can likely be written directly to it, without the
need for manual bit-shifting.

Sampling
A dedicated wavetable based on a .WAV file specified in command-line args.
Various pitch-shifting algorithms like resampling, SOLA, and phase vocoding.
Controls over formants and the like. All frequency analysis should ideally take
place at initialization since the wavetable is known ahead of time. This data,
assuming it isn't too large, should be available in a dedicated type to ease
the computational impact of frequency domain pitching. Samples used as
envelopes should maybe use the first 4096 values of their tables.

Value
In addition to the (v) value command that accepts integers, there may need to
be a (V) command for floats. This space has been reserved for future-proofing.

Sample + Hold
In addition to pure noise signals, there should be some kind of s+h feature.

Rotate Waves
Maybe rotate some of the wavetables so that they are less awkward when used
as envelope stages.

Key Follow
There are various instances where the intensity of a parameter can be modified
based upon which note is being played.

Micro-tuning
Don't know enough music theory to even consider what the actual implementation
might look like, but it's still a nice idea.

Additional inputs
The ability to assign parameters to modwheels, aftertouch, etc. The interface
for these devices would have to be generic, with an external program
converting their values into a proper boar command. Maybe two values could be 
read through mod (m/M) commands, and the routing of these values assigned
through the extra parameter (E) interface.
